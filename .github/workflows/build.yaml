name: Build Flutter Linux App as AppImage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # build-appimage:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Checkout the repository
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Install Flutter SDK
  #     - name: Install Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.24.3'

  #     # Install AppImage and Linux dependencies
  #     - name: Install AppImage and Linux dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libgtk-3-dev libblkid-dev e2fslibs-dev liblzma-dev libmpv-dev mpv ninja-build fuse desktop-file-utils
  #         wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
  #         chmod +x ./appimagetool-x86_64.AppImage


  #     # Fetch Flutter dependencies
  #     - name: Install Flutter dependencies
  #       run: flutter pub get

  #     # Run Flutter build for Linux
  #     - name: Build Flutter Linux App
  #       run: flutter build linux

  #     - name: Upload a Build Artifact
  #       uses: actions/upload-artifact@v3.1.0
  #       with:
  #         name: linux-bin
  #         path: build/linux/x64/release/bundle

  #     # Ensure executable permissions
  #     - name: Set executable permissions
  #       run: chmod +x build/linux/x64/release/bundle/open_media_server_app

  #     - run: |
  #         mkdir -p assets/AppImage/usr/bin/
  #         cp -r build/linux/x64/release/bundle/** assets/AppImage/usr/bin/
  #         chmod +x assets/AppImage/AppRun

  #     # Package the built Linux app into an AppImage
  #     - name: Create AppImage
  #       run: ARCH=x86_64 ./appimagetool-x86_64.AppImage assets/AppImage HelloWorld.AppImage

  #     # Upload the AppImage as an artifact (optional)
  #     - name: Upload AppImage artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: my-flutter-app.AppImage
  #         path: '*.AppImage'

  build-linux:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Flutter SDK
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      # Install AppImage and Linux dependencies
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libblkid-dev e2fslibs-dev liblzma-dev libmpv-dev mpv ninja-build fuse desktop-file-utils libsecret-1-dev

      # Fetch Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # Run Flutter build for Linux
      - name: Build Flutter Linux App
        run: flutter build linux

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-bin
          path: build/linux/x64/release/bundle

  build-linux-arm64:
    runs-on: 	ubuntu-24.04-arm

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Flutter SDK
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      # Install Linux dependencies
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libblkid-dev e2fslibs-dev liblzma-dev libmpv-dev mpv ninja-build fuse desktop-file-utils libsecret-1-dev

      # Fetch Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build Flutter Linux-arm64 App
        run: flutter build linux --target-platform linux-arm64 --release

      - name: Upload arm Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-bin-arm64
          path: build/linux/arm64/release/bundle

  build-flatpak:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      # Checkout the repository again
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the previously uploaded build artifact (linux-bin)
      - name: Download linux-bin artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-bin
          path: ./linux-bin

      - name: Download linux-bin-arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-bin-arm64
          path: ./linux-bin-arm64

      - run: zip -r linux-bin.zip linux-bin
      - run: ls -R

      - run: zip -r linux-bin-arm64.zip linux-bin-arm64
      - run: ls -R

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-bin.zip
          path: linux-bin.zip

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-bin-arm64.zip
          path: linux-bin-arm64.zip

      # Install Flatpak and flatpak-builder
      - name: Install Flatpak and Dependencies
        run: |
          sudo apt update
          sudo apt install -y flatpak flatpak-builder libgtk-3-dev pkg-config libayatana-appindicator3-1
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install --user -y org.gnome.Sdk/x86_64/47 
          flatpak install --user -y org.gnome.Platform/x86_64/47
          flatpak install --user -y org.gnome.Sdk/aarch64/47
          flatpak install --user -y org.gnome.Platform/aarch64/47


      - run: flatpak-builder --force-clean build-dir flatpak.yaml --repo=repo-x64

      - run: flatpak build-bundle repo-x64 app-x64.flatpak org.openmediastation.open_media_server_app
      
      # Build for Arm64
      - run: flatpak-builder --force-clean --arch=aarch64 build-dir-aarch64 flatpak.yaml --repo=repo-aarch64

      - run: flatpak build-bundle repo-aarch64 app-arm64.flatpak org.openmediastation.open_media_server_app aarch64

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: app.flatpak
          path: app.flatpak

  build-flatpak-arm:
    runs-on: ubuntu-latest
    needs: build-linux-arm64

    steps:
      # Checkout the repository again
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the previously uploaded build artifact (linux-bin)
      - name: Download linux-bin-arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-bin-arm64
          path: ./linux-bin-arm64

      - run: zip -r linux-bin.zip linux-bin-arm64
      - run: ls -R

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: linux-bin.zip
          path: linux-bin.zip

      # Install Flatpak and flatpak-builder
      - name: Install Flatpak and Dependencies
        run: |
          sudo apt update
          sudo apt install -y flatpak flatpak-builder libgtk-3-dev pkg-config libayatana-appindicator3-1
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install --user -y org.gnome.Sdk/x86_64/47 
          flatpak install --user -y org.gnome.Platform/x86_64/47
          flatpak install --user -y org.gnome.Sdk/aarch64/47
          flatpak install --user -y org.gnome.Platform/aarch64/47

      # Build for Arm64
      - run: flatpak-builder --force-clean --arch=aarch64 build-dir-aarch64 flatpak.yaml --repo=repo-aarch64

      - run: flatpak build-bundle repo-aarch64 app-arm64.flatpak org.openmediastation.open_media_server_app aarch64

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: app-arm64.flatpak
          path: app-arm64.flatpak

  build-apk:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Install Flutter SDK
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'

      # Fetch Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # Run Flutter build for Linux
      - name: Build Flutter Linux App
        run: flutter build apk

      - run: ls -R

      # Upload the AppImage as an artifact
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-flutter-app.apk
          path: "./build/app/outputs/apk/release/app-release.apk"


  # build-web:
  #   runs-on: ubuntu-latest

  #   steps:
  #     # Checkout the repository
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # Install Flutter SDK
  #     - name: Install Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.24.3'

  #     # Fetch Flutter dependencies
  #     - name: Install Flutter dependencies
  #       run: flutter pub get

  #     - run: flutter build web
  #       working-directory: ./
  #       shell: bash

  #     - name: Upload a Build Artifact
  #       uses: actions/upload-artifact@v3.1.0
  #       with:
  #         name: web
  #         path: ./build/web/